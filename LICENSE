/* ========================================================================
   Meow - A Fast Non-cryptographic Hash for Large Data Sizes
   (C) Copyright 2018 by Molly Rocket, Inc. (https://mollyrocket.com)
   
   See https://mollyrocket.com/meowhash for details.
   
   ========================================================================
   
   LICENSE
   
   This software is provided 'as-is', without any express or implied
   warranty. In no event will the authors be held liable for any damages
   arising from the use of this software.
   
   Permission is granted to anyone to use this software for any purpose,
   including commercial applications, and to alter it and redistribute it
   freely, subject to the following restrictions:
   
   1. The origin of this software must not be misrepresented; you must not
      claim that you wrote the original software. If you use this software
      in a product, an acknowledgement in the product documentation would be
      appreciated but is not required.
      
   2. Altered source versions must be plainly marked as such, and must not be
      misrepresented as being the original software.
      
   3. This notice may not be removed or altered from any source distribution.
   
   ========================================================================
   
   FAQ
   
   Q: What is it?
   A: Meow is a 512-bit non-cryptographic hash that operates at high speeds
      on x64 processors.  It is designed to be truncatable to 256, 128, 64,
      and 32-bit hash values and still retain good collision resistance.
      
   Q: What is it GOOD for?
   A: Quickly hashing large amounts of data for comparison purposes such as
      block deduplication or file verification.  As of its publication in
      October of 2018, it was the fastest hash in the smhasher suite by
      a factor of 3, but it still passes all smhasher tests and has not
      yet produced any spurious collisions in practical deployment as compared
      to a baseline of SHA-1.  It is also designed to get faster with age:
      it already contains 256-wide and 512-wide hash-equivalent versions
      that can be enabled for potentially 4x faster performance on future
      VAES x64 chips when they are available.
      
   Q: What is it BAD for?
   A: Anything security-related.  It is not designed for security and has
      not be analyzed for security.  It should be assumed that it offers
      no security whatsoever.  It is also not designed for small input
      sizes, so although it _can_ hash 1 byte, 4 bytes, 32 bytes, etc.,
      it will end up wasting a lot of time on padding since its minimum
      block size is 256 bytes.  Generally speaking, if you're not usually
      hashing a kilobyte or more, this is probably not the hash you're
      looking for.
      
   Q: Who wrote it and why?
   A: It was written by Casey Muratori (https://caseymuratori.com) for use
      in processing large-footprint assets for the game 1935
      (https://molly1935.com).  The original system used an SHA-1 hash (which
      is not designed for speed), and so to eliminate hashing bottlenecks
      in the pipeline, the Meow hash was designed to produce equivalent
      quality 256-bit hash values as a drop-in replacement that would take
      a fraction of the CPU time.
      
   Q: Why is it called the "Meow hash"?
   A: It was created while Meow the Infinite (https://meowtheinfinite.com)
      was in development at Molly Rocket, so there were lots of Meow the
      Infinite drawings happening at that time.
      
   Q: How does it work?
   A: It was designed to be the fastest possible hash that produces
      collision-free hash values in practice and passes standard hash
      quality checks.  It uses the built-in AES acceleration provided by
      modern CPUs and computes sixteen hash streams in parallel to avoid
      serial dependency stalls.  The sixteen separate hash results are
      then hashed themselves to produce the final hash value.  While only
      four hash streams would suffice for maximum performance on today's
      machines, hypothetical future chips will likely want sixteen.
      Meow was designed to be future-proof by using sixteen streams up
      front, so in the 2020 time frame when such chips start appearing,
      wider execution of Meow can be enabled without needing to change
      any persistent hash values stored in codebases, databases, etc.
      
======================================================================== */
